{"ast":null,"code":"var _jsxFileName = \"/scale_wlg_persistent/filesets/project/nesi99999/Callum/jupyter-matlab-proxy/gui/src/components/LicensingGatherer/MHLM.js\",\n    _s = $RefreshSig$();\n\n// Copyright 2020 The MathWorks, Inc.\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectLicensingMhlmUsername } from '../../selectors';\nimport { fetchSetLicensing } from '../../actionCreators'; // Send a generated nonce to the login iframe\n\nfunction setLoginNonce(username) {\n  const clientNonce = (Math.random() + \"\").substr(2);\n  const noncePayload = {\n    event: \"init\",\n    clientTransactionId: clientNonce,\n    transactionId: \"\",\n    release: \"\",\n    platform: \"\",\n    clientString: \"desktop-jupyter\",\n    clientID: \"\",\n    locale: \"\",\n    profileTier: \"\",\n    showCreateAccount: false,\n    showRememberMe: false,\n    showLicenseField: false,\n    licenseNo: \"\",\n    cachedUsername: username,\n    cachedRememberMe: false\n  };\n  const loginFrame = document.getElementById(\"loginframe\").contentWindow;\n  loginFrame.postMessage(JSON.stringify(noncePayload), \"*\");\n}\n\nfunction initLogin(clientNonce, serverNonce, sourceId) {\n  const initPayload = {\n    event: \"load\",\n    clientTransactionId: clientNonce,\n    transactionId: serverNonce,\n    release: \"\",\n    platform: \"web\",\n    clientString: \"desktop-jupyter\",\n    clientId: \"\",\n    sourceId: sourceId,\n    profileTier: \"MINIMUM\",\n    showCreateAccount: false,\n    showRememberMe: false,\n    showLicenseField: false,\n    entitlementId: \"\",\n    showPrivacyPolicy: true,\n    contextualText: \"\",\n    legalText: \"\",\n    cachedIdentifier: \"\",\n    cachedRememberMe: \"\",\n    token: \"\",\n    unauthorized: false\n  };\n  const loginFrame = document.getElementById(\"loginframe\").contentWindow;\n  loginFrame.postMessage(JSON.stringify(initPayload), \"*\");\n} // TODO Receive from serverside\n// const mhlmLoginHostname = 'login-integ3';\n\n\nconst mhlmLoginHostname = 'login';\n\nconst getHostname = () => `https://${mhlmLoginHostname}.mathworks.com`;\n\nfunction MHLM() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [iFrameLoaded, setIFrameLoaded] = useState(false);\n  const username = useSelector(selectLicensingMhlmUsername); // Create random sourceId string\n\n  const sourceId = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n  useEffect(() => {\n    const handler = event => {\n      // Only process events that are related to the iframe setup\n      if (event.origin === getHostname()) {\n        const data = JSON.parse(event.data);\n\n        if (data.event === 'nonce') {\n          initLogin(data.clientTransactionId, data.transactionId, sourceId);\n        } else if (data.event === 'login') {\n          // Persist credentials to serverside\n          dispatch(fetchSetLicensing({\n            type: 'MHLM',\n            token: data.token,\n            profileId: data.profileId,\n            emailAddress: data.emailAddress,\n            sourceId\n          }));\n        }\n      }\n    };\n\n    window.addEventListener(\"message\", handler); // Clean up\n\n    return () => {\n      window.removeEventListener(\"message\", handler);\n    };\n  }, [dispatch, sourceId]);\n  useEffect(() => {\n    if (iFrameLoaded === true) {\n      setLoginNonce(username);\n    }\n  }, [iFrameLoaded, username]);\n\n  const handleIFrameLoaded = () => setIFrameLoaded(true);\n\n  const embeddedLoginUrl = `${getHostname()}/embedded-login/v2/login.html`;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"MHLM\"\n  }, /*#__PURE__*/React.createElement(\"iframe\", {\n    id: \"loginframe\",\n    title: \"MathWorks Embedded Login\",\n    type: \"text/html\",\n    height: \"380\",\n    width: \"100%\",\n    frameBorder: \"0\",\n    src: embeddedLoginUrl,\n    onLoad: handleIFrameLoaded\n  }, \"Sorry your browser does not support inline frames.\"));\n}\n\n_s(MHLM, \"RttFmp+m4ff+hGusg508+IFy8w4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = MHLM;\nexport default MHLM;\n\nvar _c;\n\n$RefreshReg$(_c, \"MHLM\");","map":{"version":3,"sources":["/scale_wlg_persistent/filesets/project/nesi99999/Callum/jupyter-matlab-proxy/gui/src/components/LicensingGatherer/MHLM.js"],"names":["React","useState","useEffect","useSelector","useDispatch","selectLicensingMhlmUsername","fetchSetLicensing","setLoginNonce","username","clientNonce","Math","random","substr","noncePayload","event","clientTransactionId","transactionId","release","platform","clientString","clientID","locale","profileTier","showCreateAccount","showRememberMe","showLicenseField","licenseNo","cachedUsername","cachedRememberMe","loginFrame","document","getElementById","contentWindow","postMessage","JSON","stringify","initLogin","serverNonce","sourceId","initPayload","clientId","entitlementId","showPrivacyPolicy","contextualText","legalText","cachedIdentifier","token","unauthorized","mhlmLoginHostname","getHostname","MHLM","dispatch","iFrameLoaded","setIFrameLoaded","toString","substring","handler","origin","data","parse","type","profileId","emailAddress","window","addEventListener","removeEventListener","handleIFrameLoaded","embeddedLoginUrl"],"mappings":"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","sourcesContent":["// Copyright 2020 The MathWorks, Inc.\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    selectLicensingMhlmUsername\n} from '../../selectors';\nimport {\n    fetchSetLicensing\n} from '../../actionCreators';\n\n// Send a generated nonce to the login iframe\nfunction setLoginNonce(username) {\n    const clientNonce = (Math.random() + \"\").substr(2);\n    const noncePayload = {\n        event: \"init\",\n        clientTransactionId: clientNonce,\n        transactionId: \"\",\n        release: \"\",\n        platform: \"\",\n        clientString: \"desktop-jupyter\",\n        clientID: \"\",\n        locale: \"\",\n        profileTier: \"\",\n        showCreateAccount: false,\n        showRememberMe: false,\n        showLicenseField: false,\n        licenseNo: \"\",\n        cachedUsername: username,\n        cachedRememberMe: false\n    };\n\n    const loginFrame = document.getElementById(\"loginframe\").contentWindow;\n    loginFrame.postMessage(JSON.stringify(noncePayload), \"*\");\n}\n\nfunction initLogin(clientNonce, serverNonce, sourceId) {\n  const initPayload = {\n      event: \"load\",\n      clientTransactionId: clientNonce,\n      transactionId: serverNonce,\n      release: \"\",\n      platform: \"web\",\n      clientString: \"desktop-jupyter\",\n      clientId: \"\",\n      sourceId: sourceId,\n      profileTier: \"MINIMUM\",\n      showCreateAccount: false,\n      showRememberMe: false,\n      showLicenseField: false,\n      entitlementId: \"\",\n      showPrivacyPolicy: true,\n      contextualText: \"\",\n      legalText: \"\",\n      cachedIdentifier: \"\",\n      cachedRememberMe: \"\",\n      token: \"\",\n      unauthorized: false\n  };\n\n  const loginFrame = document.getElementById(\"loginframe\").contentWindow;\n  loginFrame.postMessage(JSON.stringify(initPayload), \"*\");\n}\n\n// TODO Receive from serverside\n// const mhlmLoginHostname = 'login-integ3';\nconst mhlmLoginHostname = 'login';\nconst getHostname = () => `https://${mhlmLoginHostname}.mathworks.com`;\n\nfunction MHLM() {\n    const dispatch = useDispatch();\n    const [iFrameLoaded, setIFrameLoaded] = useState(false);\n    const username = useSelector(selectLicensingMhlmUsername);\n\n    // Create random sourceId string\n    const sourceId = (\n        Math.random().toString(36).substring(2, 15)\n        + Math.random().toString(36).substring(2, 15)\n    );\n\n    useEffect(() => {\n\n        const handler = event => {\n\n            // Only process events that are related to the iframe setup\n            if (event.origin === getHostname()) {\n                const data = JSON.parse(event.data);\n\n                if (data.event === 'nonce') {\n                    initLogin(\n                        data.clientTransactionId,\n                        data.transactionId,\n                        sourceId\n                    );\n                } else if (data.event === 'login') {\n                    // Persist credentials to serverside\n                    dispatch(fetchSetLicensing({\n                        type: 'MHLM',\n                        token: data.token,\n                        profileId: data.profileId,\n                        emailAddress: data.emailAddress,\n                        sourceId\n                    }));\n                }\n            }\n        };\n\n        window.addEventListener(\"message\", handler);\n\n        // Clean up\n        return () => {\n            window.removeEventListener(\"message\", handler);\n        };\n    }, [dispatch, sourceId]);\n\n    useEffect(() => {\n        if (iFrameLoaded === true) {\n            setLoginNonce(username);\n        }\n    }, [iFrameLoaded, username]);\n\n    const handleIFrameLoaded = () => setIFrameLoaded(true);\n\n    const embeddedLoginUrl = `${getHostname()}/embedded-login/v2/login.html`;\n\n    return (\n        <div id=\"MHLM\">\n            <iframe\n                id=\"loginframe\"\n                title=\"MathWorks Embedded Login\"\n                type=\"text/html\"\n                height=\"380\"\n                width=\"100%\"\n                frameBorder=\"0\"\n                src={embeddedLoginUrl}\n                onLoad={handleIFrameLoaded}\n            >\n                Sorry your browser does not support inline frames.\n            </iframe>\n        </div>\n    );\n}\n\nexport default MHLM;\n\n"]},"metadata":{},"sourceType":"module"}