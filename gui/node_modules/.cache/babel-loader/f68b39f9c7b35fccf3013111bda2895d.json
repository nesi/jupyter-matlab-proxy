{"ast":null,"code":"var _jsxFileName = \"/scale_wlg_persistent/filesets/project/nesi99999/Callum/jupyter-matlab-proxy/gui/src/components/Controls/index.js\",\n    _s = $RefreshSig$();\n\n// Copyright 2020 The MathWorks, Inc.\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport ReactTooltip from 'react-tooltip';\nimport { selectSubmittingServerStatus, selectLicensingIsMhlm, selectLicensingProvided, selectMatlabRunning, selectMatlabVersion, selectError } from '../../selectors';\nimport { fetchStartMatlab, fetchStopMatlab, fetchTerminateIntegration, fetchUnsetLicensing } from '../../actionCreators';\nimport './Controls.css'; // Suggested actions for certain errors\n\nconst ERROR_TYPE_MAP = {\n  'sign-out': ['NetworkLicensingError', 'EntitlementError'],\n  'restart': ['OnlineLicensingError']\n};\n\nfunction Controls({\n  callback\n}) {\n  _s();\n\n  const submitting = useSelector(selectSubmittingServerStatus);\n  const licensed = useSelector(selectLicensingProvided);\n  const mhlmLicense = useSelector(selectLicensingIsMhlm);\n  const matlabRunning = useSelector(selectMatlabRunning);\n  const matlabVersion = useSelector(selectMatlabVersion);\n  const error = useSelector(selectError); //     const canTerminateIntegration = !submitting;\n\n  const canResetLicensing = licensed && !submitting;\n  const feedbackBody = useMemo(() => `%0D%0A\nThank you for providing feedback.%0D%0A\n%0D%0A\nMATLAB version: ${matlabVersion}%0D%0A`, [matlabVersion]);\n  const Confirmations = {\n    START: {\n      type: 'confirmation',\n      message: `Are you sure you want to ${matlabRunning ? 're' : ''}start MATLAB?`,\n      callback: fetchStartMatlab\n    },\n    STOP: {\n      type: 'confirmation',\n      message: 'Are you sure you want to stop MATLAB?',\n      callback: fetchStopMatlab\n    },\n    TERMINATE: {\n      type: 'confirmation',\n      message: 'Are you sure you want to terminate MATLAB and this Jupyter integration?',\n      callback: fetchTerminateIntegration\n    },\n    SIGN_OUT: {\n      type: 'confirmation',\n      message: `Are you sure you want to ${mhlmLicense ? 'sign out of MATLAB' : 'unset the connection string'}?`,\n      callback: fetchUnsetLicensing\n    },\n    HELP: {\n      type: 'help'\n    }\n  };\n\n  function getBtnClass(btn) {\n    let cls = 'btn companion_btn ';\n\n    if (error) {\n      if ((ERROR_TYPE_MAP[btn] || []).includes(error.type)) {\n        return cls + 'btn_color_blue';\n      }\n    } else if (btn === 'start') {\n      // if there's no error, then highlight the \"Start\" button (if visible)\n      return cls + 'btn_color_blue';\n    }\n\n    return cls + 'btn_color_mediumgray';\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"controls\",\n    className: \"labels-on-top\"\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"startMatlab\",\n    className: getBtnClass(matlabRunning ? 'restart' : 'start'),\n    onClick: () => callback(Confirmations.START),\n    disabled: !licensed,\n    \"data-for\": \"control-button-tooltip\",\n    \"data-tip\": `${matlabRunning ? 'Restart' : 'Start'}  your MATLAB session`\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: `icon-custom-${matlabRunning ? 're' : ''}start`\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"btn-label\"\n  }, `${matlabRunning ? 'Restart' : 'Start'} MATLAB Session`)), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"stopMatlab\",\n    className: getBtnClass('stop'),\n    onClick: () => callback(Confirmations.STOP),\n    disabled: !matlabRunning,\n    \"data-for\": \"control-button-tooltip\",\n    \"data-tip\": \"Stop your MATLAB session\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon-custom-stop\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"btn-label\"\n  }, \"Stop MATLAB Session\")), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"unsetLicensing\",\n    className: getBtnClass('sign-out'),\n    onClick: () => callback(Confirmations.SIGN_OUT),\n    disabled: !canResetLicensing,\n    \"data-for\": \"control-button-tooltip\",\n    \"data-tip\": mhlmLicense ? 'Sign out' : 'Unset the network license manager server address'\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon-custom-sign-out\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"btn-label\"\n  }, mhlmLicense ? 'Sign Out' : 'Unset License Server Address')), /*#__PURE__*/React.createElement(\"a\", {\n    id: \"feedback\",\n    className: \"btn btn_color_mediumgray companion_btn\",\n    href: `mailto:jupyter-support@mathworks.com?subject=MATLAB Integration for Jupyter Feedback&body=${feedbackBody}`,\n    \"data-for\": \"control-button-tooltip\",\n    \"data-tip\": \"Send feedback (opens your default email application)\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon-custom-feedback\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"btn-label\"\n  }, \"Feedback\")), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"Help\",\n    className: \"btn btn_color_mediumgray companion_btn\",\n    onClick: () => callback(Confirmations.HELP),\n    \"data-for\": \"control-button-tooltip\",\n    \"data-tip\": \"See a description of the buttons\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon-custom-help\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"btn-label\"\n  }, \"Help\")), /*#__PURE__*/React.createElement(ReactTooltip, {\n    id: \"control-button-tooltip\",\n    place: \"top\",\n    type: \"info\",\n    effect: \"solid\"\n  }));\n}\n\n_s(Controls, \"RVjni4g514dxAJDAVugCL8ZIDYI=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Controls;\nControls.propTypes = {\n  confirmHandler: PropTypes.func\n};\nexport default Controls;\n\nvar _c;\n\n$RefreshReg$(_c, \"Controls\");","map":{"version":3,"sources":["/scale_wlg_persistent/filesets/project/nesi99999/Callum/jupyter-matlab-proxy/gui/src/components/Controls/index.js"],"names":["React","useMemo","PropTypes","useSelector","ReactTooltip","selectSubmittingServerStatus","selectLicensingIsMhlm","selectLicensingProvided","selectMatlabRunning","selectMatlabVersion","selectError","fetchStartMatlab","fetchStopMatlab","fetchTerminateIntegration","fetchUnsetLicensing","ERROR_TYPE_MAP","Controls","callback","submitting","licensed","mhlmLicense","matlabRunning","matlabVersion","error","canResetLicensing","feedbackBody","Confirmations","START","type","message","STOP","TERMINATE","SIGN_OUT","HELP","getBtnClass","btn","cls","includes","propTypes","confirmHandler","func"],"mappings":"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","sourcesContent":["// Copyright 2020 The MathWorks, Inc.\n\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport ReactTooltip from 'react-tooltip';\nimport {\n    selectSubmittingServerStatus,\n    selectLicensingIsMhlm,\n    selectLicensingProvided,\n    selectMatlabRunning,\n    selectMatlabVersion,\n    selectError\n} from '../../selectors';\nimport {\n    fetchStartMatlab,\n    fetchStopMatlab,\n    fetchTerminateIntegration,\n    fetchUnsetLicensing\n} from '../../actionCreators';\nimport './Controls.css';\n\n// Suggested actions for certain errors\nconst ERROR_TYPE_MAP = {\n    'sign-out': ['NetworkLicensingError', 'EntitlementError'],\n    'restart': ['OnlineLicensingError']\n};\n\nfunction Controls({\n    callback\n}) {\n    const submitting = useSelector(selectSubmittingServerStatus);\n    const licensed = useSelector(selectLicensingProvided);\n    const mhlmLicense = useSelector(selectLicensingIsMhlm);\n    const matlabRunning = useSelector(selectMatlabRunning);\n    const matlabVersion = useSelector(selectMatlabVersion);\n    const error = useSelector(selectError);\n\n//     const canTerminateIntegration = !submitting;\n    const canResetLicensing = licensed && !submitting;\n\n    const feedbackBody = useMemo(\n        () => `%0D%0A\nThank you for providing feedback.%0D%0A\n%0D%0A\nMATLAB version: ${matlabVersion}%0D%0A`,\n        [matlabVersion]\n    );\n\n    const Confirmations = {\n        START: {\n            type: 'confirmation',\n            message: `Are you sure you want to ${matlabRunning ? 're' : ''}start MATLAB?`,\n            callback: fetchStartMatlab\n        },\n        STOP: {\n            type: 'confirmation',\n            message: 'Are you sure you want to stop MATLAB?',\n            callback: fetchStopMatlab\n        },\n        TERMINATE: {\n            type: 'confirmation',\n            message: 'Are you sure you want to terminate MATLAB and this Jupyter integration?',\n            callback: fetchTerminateIntegration\n        },\n        SIGN_OUT: {\n            type: 'confirmation',\n            message: `Are you sure you want to ${mhlmLicense ? 'sign out of MATLAB' : 'unset the connection string'}?`,\n            callback: fetchUnsetLicensing\n        },\n        HELP: {\n            type: 'help'\n        }\n    };\n\n    function getBtnClass (btn) {\n        let cls = 'btn companion_btn ';\n        if (error) {\n            if ((ERROR_TYPE_MAP[btn] || []).includes(error.type)) {\n                return cls + 'btn_color_blue';\n            }\n        } else if (btn === 'start') {\n            // if there's no error, then highlight the \"Start\" button (if visible)\n            return cls + 'btn_color_blue';\n        }\n        return cls + 'btn_color_mediumgray';\n    };\n\n    return (\n        <div id=\"controls\" className=\"labels-on-top\">\n            <button\n                id=\"startMatlab\"\n                className={getBtnClass(matlabRunning ? 'restart' : 'start')}\n                onClick={() => callback(Confirmations.START)}\n                disabled={!licensed}\n                data-for=\"control-button-tooltip\"\n                data-tip={`${matlabRunning ? 'Restart' : 'Start'}  your MATLAB session`}\n            >\n                <span className={`icon-custom-${matlabRunning ? 're' : ''}start`}></span>\n                <span className='btn-label'>{`${matlabRunning ? 'Restart' : 'Start'} MATLAB Session`}</span>\n            </button>\n            <button\n                id=\"stopMatlab\"\n                className={getBtnClass('stop')}\n                onClick={() => callback(Confirmations.STOP)}\n                disabled={!matlabRunning}\n                data-for=\"control-button-tooltip\"\n                data-tip=\"Stop your MATLAB session\"\n            >\n                <span className='icon-custom-stop'></span>\n                <span className='btn-label'>Stop MATLAB Session</span>\n            </button>\n            <button\n                id=\"unsetLicensing\"\n                className={getBtnClass('sign-out')}\n                onClick={() => callback(Confirmations.SIGN_OUT)}\n                disabled={!canResetLicensing}\n                data-for=\"control-button-tooltip\"\n                data-tip={mhlmLicense ? 'Sign out' : 'Unset the network license manager server address'}\n            >\n                <span className='icon-custom-sign-out'></span>\n                <span className='btn-label'>{mhlmLicense ? 'Sign Out' : 'Unset License Server Address'}</span>\n            </button>\n            {/* <button\n                id=\"terminateIntegration\"\n                className=\"btn btn_color_mediumgray companion_btn\"\n                style={{display: 'none'}}\n                onClick={() => callback(Confirmations.TERMINATE)}\n                disabled={!canTerminateIntegration}\n                data-for=\"control-button-tooltip\"\n                data-tip=\"Terminate your MATLAB and MATLAB in Jupyter sessions\"\n            >\n                <span className='icon-custom-terminate'></span>\n                <span className='btn-label'>End Session</span>\n            </button> */}\n            <a\n                id=\"feedback\"\n                className=\"btn btn_color_mediumgray companion_btn\"\n                href={ `mailto:jupyter-support@mathworks.com?subject=MATLAB Integration for Jupyter Feedback&body=${feedbackBody}` }\n                data-for=\"control-button-tooltip\"\n                data-tip=\"Send feedback (opens your default email application)\"\n            >\n                <span className='icon-custom-feedback'></span>\n                <span className='btn-label'>Feedback</span>\n            </a>\n            <button\n                id=\"Help\"\n                className=\"btn btn_color_mediumgray companion_btn\"\n                onClick={() => callback(Confirmations.HELP)}\n                data-for=\"control-button-tooltip\"\n                data-tip=\"See a description of the buttons\"\n            >\n                <span className='icon-custom-help'></span>\n                <span className='btn-label'>Help</span>\n            </button>\n            <ReactTooltip\n                id=\"control-button-tooltip\"\n                place=\"top\"\n                type=\"info\"\n                effect=\"solid\"\n            />\n        </div>\n    );\n}\n\nControls.propTypes = {\n    confirmHandler: PropTypes.func\n};\n\nexport default Controls;\n"]},"metadata":{},"sourceType":"module"}